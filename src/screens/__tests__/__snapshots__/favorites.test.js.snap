// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`check is all elements are displayed during loading state should display loading text after entering text of react 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
  testID="favorites-screen"
>
  <View
    style={
      {
        "borderBottomWidth": 3,
        "borderColor": "#000000",
        "flexBasis": 65,
        "marginBottom": 5,
        "width": "100%",
      }
    }
    testID="header"
  >
    <View
      style={
        {
          "alignItems": "center",
          "borderRadius": 0,
          "bottom": 2,
          "left": 4,
          "opacity": 1,
          "position": "absolute",
          "right": 4,
          "top": 4,
        }
      }
    >
      <Text
        style={
          {
            "textAlign": "center",
          }
        }
      >
        The Infatuation
      </Text>
      <View
        style={
          {
            "alignItems": "center",
            "flexDirection": "row",
            "flexGrow": 1,
            "justifyContent": "center",
          }
        }
      >
        <SvgMock />
      </View>
    </View>
    <View
      style={
        {
          "alignItems": "center",
          "borderRadius": 0,
          "bottom": 2,
          "flexGrow": 0,
          "flexShrink": 1,
          "left": undefined,
          "opacity": 1,
          "position": "absolute",
          "right": 2,
          "top": 4,
        }
      }
      testID="right-items"
    >
      <Text
        style={
          {
            "fontSize": 10,
          }
        }
      >
        Sort by Stars
      </Text>
      <View
        style={
          {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "row",
            "rowGap": 2,
          }
        }
      >
        <View
          style={
            {
              "flexDirection": "column",
            }
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row-reverse",
                "height": 40,
                "justifyContent": "center",
                "minWidth": 40,
                "opacity": 1,
              }
            }
            testID="header-item"
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "transform": [
                    {
                      "rotate": "0deg",
                    },
                  ],
                }
              }
            >
              <SvgMock
                fill="white"
                height={24}
                width={24}
              />
            </View>
          </View>
        </View>
        <View
          style={
            {
              "flexDirection": "column",
            }
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row-reverse",
                "height": 40,
                "justifyContent": "center",
                "minWidth": 40,
                "opacity": 1,
              }
            }
            testID="header-item"
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "transform": [
                    {
                      "rotate": "-180deg",
                    },
                  ],
                }
              }
            >
              <SvgMock
                fill="white"
                height={24}
                width={24}
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      {
        "alignItems": "center",
        "justifyContent": "center",
      }
    }
  >
    <Text
      accessibilityLabel="loading"
      style={
        {
          "fontSize": 18,
          "padding": 8,
        }
      }
      testID="loading-text"
    >
      Loading...
    </Text>
  </View>
  <View>
    <RCTScrollView
      ListEmptyComponent={[Function]}
      data={[]}
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={[]}
      viewabilityConfigCallbackPairs={[]}
    >
      <View>
        <View
          style={
            {
              "marginTop": 50,
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flex": 1,
                "gap": 10,
                "justifyContent": "center",
              }
            }
          >
            <Text
              style={
                {
                  "color": "#000000",
                  "fontFamily": "Lato-Bold",
                  "fontSize": 14,
                  "marginBottom": 0,
                }
              }
              testID="title"
            >
              You haven't favorited any repos yet
            </Text>
            <Text
              style={
                {
                  "color": "#000000",
                  "fontFamily": "Lato-Regular",
                  "fontSize": 12,
                  "marginBottom": 14,
                  "marginTop": 0,
                }
              }
            >
              Why not try to find a repo you like?
            </Text>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "backgroundColor": "#000000",
                  "borderRadius": 16,
                  "opacity": 1,
                  "paddingHorizontal": 30,
                  "paddingVertical": 16,
                }
              }
              testID="button"
            >
              <Text
                style={
                  {
                    "color": "#ffffff",
                    "fontFamily": "Lato-Bold",
                    "fontSize": 12,
                  }
                }
              >
                Start Searching
              </Text>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;

exports[`check is all elements are displayed on favorites screen display row data of repo results from storage 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
  testID="favorites-screen"
>
  <View
    style={
      {
        "borderBottomWidth": 3,
        "borderColor": "#000000",
        "flexBasis": 65,
        "marginBottom": 5,
        "width": "100%",
      }
    }
    testID="header"
  >
    <View
      style={
        {
          "alignItems": "center",
          "borderRadius": 0,
          "bottom": 2,
          "left": 4,
          "opacity": 1,
          "position": "absolute",
          "right": 4,
          "top": 4,
        }
      }
    >
      <Text
        style={
          {
            "textAlign": "center",
          }
        }
      >
        The Infatuation
      </Text>
      <View
        style={
          {
            "alignItems": "center",
            "flexDirection": "row",
            "flexGrow": 1,
            "justifyContent": "center",
          }
        }
      >
        <SvgMock />
      </View>
    </View>
    <View
      style={
        {
          "alignItems": "center",
          "borderRadius": 0,
          "bottom": 2,
          "flexGrow": 0,
          "flexShrink": 1,
          "left": undefined,
          "opacity": 1,
          "position": "absolute",
          "right": 2,
          "top": 4,
        }
      }
      testID="right-items"
    >
      <Text
        style={
          {
            "fontSize": 10,
          }
        }
      >
        Sort by Stars
      </Text>
      <View
        style={
          {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "row",
            "rowGap": 2,
          }
        }
      >
        <View
          style={
            {
              "flexDirection": "column",
            }
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row-reverse",
                "height": 40,
                "justifyContent": "center",
                "minWidth": 40,
                "opacity": 1,
              }
            }
            testID="header-item"
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "transform": [
                    {
                      "rotate": "0deg",
                    },
                  ],
                }
              }
            >
              <SvgMock
                fill="white"
                height={24}
                width={24}
              />
            </View>
          </View>
        </View>
        <View
          style={
            {
              "flexDirection": "column",
            }
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row-reverse",
                "height": 40,
                "justifyContent": "center",
                "minWidth": 40,
                "opacity": 1,
              }
            }
            testID="header-item"
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "transform": [
                    {
                      "rotate": "-180deg",
                    },
                  ],
                }
              }
            >
              <SvgMock
                fill="white"
                height={24}
                width={24}
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View>
    <RCTScrollView
      ListEmptyComponent={[Function]}
      data={
        [
          {
            "createdAt": "02/02/2022",
            "fullName": "jim/react",
            "id": "1",
            "language": "react",
            "stargazersCount": "10",
            "url": "http://go-get-bob.com",
          },
          {
            "createdAt": "02/02/2022",
            "fullName": "jimBOB/react",
            "id": "2",
            "language": "react",
            "stargazersCount": "10",
            "url": "http://go-get-bob.com",
          },
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={[]}
      viewabilityConfigCallbackPairs={[]}
    >
      <View>
        <View
          onFocusCapture={[Function]}
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              {
                "flex": 1,
              }
            }
          >
            <View
              collapsable={false}
              forwardedRef={[Function]}
              handlerTag={1}
              handlerType="PanGestureHandler"
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onLayout={[Function]}
              style={
                {
                  "overflow": "hidden",
                }
              }
            >
              <View
                collapsable={false}
                style={
                  {
                    "bottom": 0,
                    "flexDirection": "row",
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                    "transform": [
                      {
                        "translateX": -10000,
                      },
                    ],
                  }
                }
              >
                <View />
                <View
                  onLayout={[Function]}
                />
              </View>
              <View
                collapsable={false}
                style={
                  {
                    "bottom": 0,
                    "flexDirection": "row-reverse",
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                    "transform": [
                      {
                        "translateX": -10000,
                      },
                    ],
                  }
                }
              >
                <View>
                  <View
                    accessibilityState={
                      {
                        "busy": undefined,
                        "checked": undefined,
                        "disabled": undefined,
                        "expanded": undefined,
                        "selected": undefined,
                      }
                    }
                    accessibilityValue={
                      {
                        "max": undefined,
                        "min": undefined,
                        "now": undefined,
                        "text": undefined,
                      }
                    }
                    accessible={true}
                    collapsable={false}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      {
                        "borderBottomRightRadius": 10,
                        "borderTopRightRadius": 10,
                        "flexGrow": 1,
                        "marginBottom": 5,
                        "marginRight": 15,
                        "opacity": 1,
                        "overflow": "hidden",
                      }
                    }
                    testID="swipe-onPress"
                  >
                    <View
                      accessibilityLabel="fav-item0"
                      style={
                        {
                          "backgroundColor": "red",
                          "borderRadius": 0,
                          "bottom": 0,
                          "left": 0,
                          "opacity": 1,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        }
                      }
                      testID="fav-item0"
                    />
                    <View
                      style={
                        {
                          "alignItems": "center",
                          "flexGrow": 1,
                          "justifyContent": "center",
                        }
                      }
                    >
                      <View
                        style={
                          {
                            "alignItems": "center",
                            "flexDirection": "column",
                            "flexShrink": 1,
                            "margin": 20,
                          }
                        }
                      >
                        <SvgMock
                          fill="#ffffff"
                          height={20}
                          width={20}
                        />
                        <Text
                          style={
                            {
                              "color": "#fff",
                              "fontFamily": "Lato-Bold",
                              "marginVertical": 2,
                            }
                          }
                          testID="delete"
                        >
                          Delete
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  onLayout={[Function]}
                />
              </View>
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={2}
                handlerType="TapGestureHandler"
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                pointerEvents="auto"
                style={
                  {
                    "transform": [
                      {
                        "translateX": -0,
                      },
                    ],
                  }
                }
              >
                <View
                  style={
                    {
                      "backgroundColor": "#ffffff",
                      "borderRadius": 5,
                      "flex": 1,
                      "flexDirection": "row",
                      "marginBottom": 5,
                      "marginLeft": 20,
                      "marginRight": 15,
                    }
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "row",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                          "flexDirection": "column",
                          "marginLeft": 5,
                        }
                      }
                    >
                      <View
                        style={
                          {
                            "flex": 1,
                            "flexDirection": "row",
                            "gap": 10,
                            "marginVertical": 2,
                          }
                        }
                      >
                        <Text
                          style={
                            {
                              "flexWrap": "wrap",
                              "fontFamily": "Lato-Bold",
                              "fontSize": 12,
                            }
                          }
                        >
                          Name:
                        </Text>
                        <Text
                          style={
                            {
                              "fontFamily": "Lato-Regular",
                              "fontSize": 12,
                            }
                          }
                          testID="fullName"
                        >
                          jim/react
                        </Text>
                      </View>
                      <View
                        style={
                          {
                            "flex": 1,
                            "flexDirection": "row",
                            "gap": 10,
                            "marginVertical": 2,
                          }
                        }
                      >
                        <Text
                          style={
                            {
                              "flexWrap": "wrap",
                              "fontFamily": "Lato-Bold",
                              "fontSize": 12,
                            }
                          }
                        >
                          Stargazers Count:
                        </Text>
                        <Text
                          style={
                            {
                              "fontFamily": "Lato-Regular",
                              "fontSize": 12,
                            }
                          }
                          testID="stargazersCount"
                        >
                          10
                        </Text>
                      </View>
                      <View
                        style={
                          {
                            "flex": 1,
                            "flexDirection": "row",
                            "gap": 10,
                            "marginVertical": 2,
                          }
                        }
                      >
                        <Text
                          style={
                            {
                              "flexWrap": "wrap",
                              "fontFamily": "Lato-Bold",
                              "fontSize": 12,
                            }
                          }
                        >
                          Language:
                        </Text>
                        <Text
                          style={
                            {
                              "fontFamily": "Lato-Regular",
                              "fontSize": 12,
                            }
                          }
                          testID="language"
                        >
                          react
                        </Text>
                      </View>
                      <View
                        style={
                          {
                            "flex": 1,
                            "flexDirection": "row",
                            "gap": 10,
                            "marginVertical": 2,
                          }
                        }
                      >
                        <Text
                          style={
                            {
                              "flexWrap": "wrap",
                              "fontFamily": "Lato-Bold",
                              "fontSize": 12,
                            }
                          }
                        >
                          Year Created:
                        </Text>
                        <Text
                          style={
                            {
                              "fontFamily": "Lato-Regular",
                              "fontSize": 12,
                            }
                          }
                          testID="createdAt"
                        >
                          2022
                        </Text>
                      </View>
                      <View
                        style={
                          [
                            {
                              "flex": 1,
                              "flexDirection": "row",
                              "gap": 10,
                              "marginVertical": 2,
                            },
                          ]
                        }
                      >
                        <Text
                          style={
                            {
                              "flexWrap": "wrap",
                              "fontFamily": "Lato-Bold",
                              "fontSize": 12,
                            }
                          }
                        >
                          Link:
                        </Text>
                        <View
                          style={
                            [
                              {
                                "flex": 1,
                                "marginRight": 15,
                              },
                            ]
                          }
                        >
                          <Text
                            style={
                              {
                                "fontFamily": "Lato-Regular",
                                "fontSize": 12,
                              }
                            }
                            testID="url"
                          >
                            http://go-get-bob.com
                          </Text>
                        </View>
                      </View>
                    </View>
                    <View
                      style={
                        [
                          {
                            "justifyContent": "center",
                            "marginRight": 10,
                          },
                        ]
                      }
                    >
                      <SvgMock
                        fill="#C2BABA"
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <View
          onFocusCapture={[Function]}
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              {
                "flex": 1,
              }
            }
          >
            <View
              collapsable={false}
              forwardedRef={[Function]}
              handlerTag={3}
              handlerType="PanGestureHandler"
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onLayout={[Function]}
              style={
                {
                  "overflow": "hidden",
                }
              }
            >
              <View
                collapsable={false}
                style={
                  {
                    "bottom": 0,
                    "flexDirection": "row",
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                    "transform": [
                      {
                        "translateX": -10000,
                      },
                    ],
                  }
                }
              >
                <View />
                <View
                  onLayout={[Function]}
                />
              </View>
              <View
                collapsable={false}
                style={
                  {
                    "bottom": 0,
                    "flexDirection": "row-reverse",
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                    "transform": [
                      {
                        "translateX": -10000,
                      },
                    ],
                  }
                }
              >
                <View>
                  <View
                    accessibilityState={
                      {
                        "busy": undefined,
                        "checked": undefined,
                        "disabled": undefined,
                        "expanded": undefined,
                        "selected": undefined,
                      }
                    }
                    accessibilityValue={
                      {
                        "max": undefined,
                        "min": undefined,
                        "now": undefined,
                        "text": undefined,
                      }
                    }
                    accessible={true}
                    collapsable={false}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      {
                        "borderBottomRightRadius": 10,
                        "borderTopRightRadius": 10,
                        "flexGrow": 1,
                        "marginBottom": 5,
                        "marginRight": 15,
                        "opacity": 1,
                        "overflow": "hidden",
                      }
                    }
                    testID="swipe-onPress"
                  >
                    <View
                      accessibilityLabel="fav-item1"
                      style={
                        {
                          "backgroundColor": "red",
                          "borderRadius": 0,
                          "bottom": 0,
                          "left": 0,
                          "opacity": 1,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        }
                      }
                      testID="fav-item1"
                    />
                    <View
                      style={
                        {
                          "alignItems": "center",
                          "flexGrow": 1,
                          "justifyContent": "center",
                        }
                      }
                    >
                      <View
                        style={
                          {
                            "alignItems": "center",
                            "flexDirection": "column",
                            "flexShrink": 1,
                            "margin": 20,
                          }
                        }
                      >
                        <SvgMock
                          fill="#ffffff"
                          height={20}
                          width={20}
                        />
                        <Text
                          style={
                            {
                              "color": "#fff",
                              "fontFamily": "Lato-Bold",
                              "marginVertical": 2,
                            }
                          }
                          testID="delete"
                        >
                          Delete
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
                <View
                  onLayout={[Function]}
                />
              </View>
              <View
                collapsable={false}
                forwardedRef={[Function]}
                handlerTag={4}
                handlerType="TapGestureHandler"
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                pointerEvents="auto"
                style={
                  {
                    "transform": [
                      {
                        "translateX": -0,
                      },
                    ],
                  }
                }
              >
                <View
                  style={
                    {
                      "backgroundColor": "#ffffff",
                      "borderRadius": 5,
                      "flex": 1,
                      "flexDirection": "row",
                      "marginBottom": 5,
                      "marginLeft": 20,
                      "marginRight": 15,
                    }
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                        "flexDirection": "row",
                      }
                    }
                  >
                    <View
                      style={
                        {
                          "flex": 1,
                          "flexDirection": "column",
                          "marginLeft": 5,
                        }
                      }
                    >
                      <View
                        style={
                          {
                            "flex": 1,
                            "flexDirection": "row",
                            "gap": 10,
                            "marginVertical": 2,
                          }
                        }
                      >
                        <Text
                          style={
                            {
                              "flexWrap": "wrap",
                              "fontFamily": "Lato-Bold",
                              "fontSize": 12,
                            }
                          }
                        >
                          Name:
                        </Text>
                        <Text
                          style={
                            {
                              "fontFamily": "Lato-Regular",
                              "fontSize": 12,
                            }
                          }
                          testID="fullName"
                        >
                          jimBOB/react
                        </Text>
                      </View>
                      <View
                        style={
                          {
                            "flex": 1,
                            "flexDirection": "row",
                            "gap": 10,
                            "marginVertical": 2,
                          }
                        }
                      >
                        <Text
                          style={
                            {
                              "flexWrap": "wrap",
                              "fontFamily": "Lato-Bold",
                              "fontSize": 12,
                            }
                          }
                        >
                          Stargazers Count:
                        </Text>
                        <Text
                          style={
                            {
                              "fontFamily": "Lato-Regular",
                              "fontSize": 12,
                            }
                          }
                          testID="stargazersCount"
                        >
                          10
                        </Text>
                      </View>
                      <View
                        style={
                          {
                            "flex": 1,
                            "flexDirection": "row",
                            "gap": 10,
                            "marginVertical": 2,
                          }
                        }
                      >
                        <Text
                          style={
                            {
                              "flexWrap": "wrap",
                              "fontFamily": "Lato-Bold",
                              "fontSize": 12,
                            }
                          }
                        >
                          Language:
                        </Text>
                        <Text
                          style={
                            {
                              "fontFamily": "Lato-Regular",
                              "fontSize": 12,
                            }
                          }
                          testID="language"
                        >
                          react
                        </Text>
                      </View>
                      <View
                        style={
                          {
                            "flex": 1,
                            "flexDirection": "row",
                            "gap": 10,
                            "marginVertical": 2,
                          }
                        }
                      >
                        <Text
                          style={
                            {
                              "flexWrap": "wrap",
                              "fontFamily": "Lato-Bold",
                              "fontSize": 12,
                            }
                          }
                        >
                          Year Created:
                        </Text>
                        <Text
                          style={
                            {
                              "fontFamily": "Lato-Regular",
                              "fontSize": 12,
                            }
                          }
                          testID="createdAt"
                        >
                          2022
                        </Text>
                      </View>
                      <View
                        style={
                          [
                            {
                              "flex": 1,
                              "flexDirection": "row",
                              "gap": 10,
                              "marginVertical": 2,
                            },
                          ]
                        }
                      >
                        <Text
                          style={
                            {
                              "flexWrap": "wrap",
                              "fontFamily": "Lato-Bold",
                              "fontSize": 12,
                            }
                          }
                        >
                          Link:
                        </Text>
                        <View
                          style={
                            [
                              {
                                "flex": 1,
                                "marginRight": 15,
                              },
                            ]
                          }
                        >
                          <Text
                            style={
                              {
                                "fontFamily": "Lato-Regular",
                                "fontSize": 12,
                              }
                            }
                            testID="url"
                          >
                            http://go-get-bob.com
                          </Text>
                        </View>
                      </View>
                    </View>
                    <View
                      style={
                        [
                          {
                            "justifyContent": "center",
                            "marginRight": 10,
                          },
                        ]
                      }
                    >
                      <SvgMock
                        fill="#C2BABA"
                      />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;

exports[`check is all elements are displayed when favorites screen is mounted should render all expected elements 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
  testID="favorites-screen"
>
  <View
    style={
      {
        "borderBottomWidth": 3,
        "borderColor": "#000000",
        "flexBasis": 65,
        "marginBottom": 5,
        "width": "100%",
      }
    }
    testID="header"
  >
    <View
      style={
        {
          "alignItems": "center",
          "borderRadius": 0,
          "bottom": 2,
          "left": 4,
          "opacity": 1,
          "position": "absolute",
          "right": 4,
          "top": 4,
        }
      }
    >
      <Text
        style={
          {
            "textAlign": "center",
          }
        }
      >
        The Infatuation
      </Text>
      <View
        style={
          {
            "alignItems": "center",
            "flexDirection": "row",
            "flexGrow": 1,
            "justifyContent": "center",
          }
        }
      >
        <SvgMock />
      </View>
    </View>
    <View
      style={
        {
          "alignItems": "center",
          "borderRadius": 0,
          "bottom": 2,
          "flexGrow": 0,
          "flexShrink": 1,
          "left": undefined,
          "opacity": 1,
          "position": "absolute",
          "right": 2,
          "top": 4,
        }
      }
      testID="right-items"
    >
      <Text
        style={
          {
            "fontSize": 10,
          }
        }
      >
        Sort by Stars
      </Text>
      <View
        style={
          {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "row",
            "rowGap": 2,
          }
        }
      >
        <View
          style={
            {
              "flexDirection": "column",
            }
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row-reverse",
                "height": 40,
                "justifyContent": "center",
                "minWidth": 40,
                "opacity": 1,
              }
            }
            testID="header-item"
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "transform": [
                    {
                      "rotate": "0deg",
                    },
                  ],
                }
              }
            >
              <SvgMock
                fill="white"
                height={24}
                width={24}
              />
            </View>
          </View>
        </View>
        <View
          style={
            {
              "flexDirection": "column",
            }
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row-reverse",
                "height": 40,
                "justifyContent": "center",
                "minWidth": 40,
                "opacity": 1,
              }
            }
            testID="header-item"
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "transform": [
                    {
                      "rotate": "-180deg",
                    },
                  ],
                }
              }
            >
              <SvgMock
                fill="white"
                height={24}
                width={24}
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View>
    <RCTScrollView
      ListEmptyComponent={[Function]}
      data={[]}
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={[]}
      viewabilityConfigCallbackPairs={[]}
    >
      <View>
        <View
          style={
            {
              "marginTop": 50,
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flex": 1,
                "gap": 10,
                "justifyContent": "center",
              }
            }
          >
            <Text
              style={
                {
                  "color": "#000000",
                  "fontFamily": "Lato-Bold",
                  "fontSize": 14,
                  "marginBottom": 0,
                }
              }
              testID="title"
            >
              You haven't favorited any repos yet
            </Text>
            <Text
              style={
                {
                  "color": "#000000",
                  "fontFamily": "Lato-Regular",
                  "fontSize": 12,
                  "marginBottom": 14,
                  "marginTop": 0,
                }
              }
            >
              Why not try to find a repo you like?
            </Text>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "backgroundColor": "#000000",
                  "borderRadius": 16,
                  "opacity": 1,
                  "paddingHorizontal": 30,
                  "paddingVertical": 16,
                }
              }
              testID="button"
            >
              <Text
                style={
                  {
                    "color": "#ffffff",
                    "fontFamily": "Lato-Bold",
                    "fontSize": 12,
                  }
                }
              >
                Start Searching
              </Text>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;

exports[`display error message display error state elements 1`] = `
<View
  style={
    {
      "flex": 1,
    }
  }
  testID="favorites-screen"
>
  <View
    style={
      {
        "borderBottomWidth": 3,
        "borderColor": "#000000",
        "flexBasis": 65,
        "marginBottom": 5,
        "width": "100%",
      }
    }
    testID="header"
  >
    <View
      style={
        {
          "alignItems": "center",
          "borderRadius": 0,
          "bottom": 2,
          "left": 4,
          "opacity": 1,
          "position": "absolute",
          "right": 4,
          "top": 4,
        }
      }
    >
      <Text
        style={
          {
            "textAlign": "center",
          }
        }
      >
        The Infatuation
      </Text>
      <View
        style={
          {
            "alignItems": "center",
            "flexDirection": "row",
            "flexGrow": 1,
            "justifyContent": "center",
          }
        }
      >
        <SvgMock />
      </View>
    </View>
    <View
      style={
        {
          "alignItems": "center",
          "borderRadius": 0,
          "bottom": 2,
          "flexGrow": 0,
          "flexShrink": 1,
          "left": undefined,
          "opacity": 1,
          "position": "absolute",
          "right": 2,
          "top": 4,
        }
      }
      testID="right-items"
    >
      <Text
        style={
          {
            "fontSize": 10,
          }
        }
      >
        Sort by Stars
      </Text>
      <View
        style={
          {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "row",
            "rowGap": 2,
          }
        }
      >
        <View
          style={
            {
              "flexDirection": "column",
            }
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row-reverse",
                "height": 40,
                "justifyContent": "center",
                "minWidth": 40,
                "opacity": 1,
              }
            }
            testID="header-item"
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "transform": [
                    {
                      "rotate": "0deg",
                    },
                  ],
                }
              }
            >
              <SvgMock
                fill="white"
                height={24}
                width={24}
              />
            </View>
          </View>
        </View>
        <View
          style={
            {
              "flexDirection": "column",
            }
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "flexDirection": "row-reverse",
                "height": 40,
                "justifyContent": "center",
                "minWidth": 40,
                "opacity": 1,
              }
            }
            testID="header-item"
          >
            <View
              style={
                {
                  "alignItems": "center",
                  "transform": [
                    {
                      "rotate": "-180deg",
                    },
                  ],
                }
              }
            >
              <SvgMock
                fill="white"
                height={24}
                width={24}
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      {
        "alignItems": "center",
        "justifyContent": "center",
      }
    }
  >
    <Text
      style={
        [
          {
            "fontSize": 18,
            "padding": 8,
          },
          {
            "color": "red",
            "fontSize": 18,
            "padding": 8,
          },
        ]
      }
      testID="error-message"
    >
      Houston we have a problem.
    </Text>
  </View>
  <View>
    <RCTScrollView
      ListEmptyComponent={[Function]}
      data={[]}
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={[]}
      viewabilityConfigCallbackPairs={[]}
    >
      <View>
        <View
          style={
            {
              "marginTop": 50,
            }
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "flex": 1,
                "gap": 10,
                "justifyContent": "center",
              }
            }
          >
            <Text
              style={
                {
                  "color": "#000000",
                  "fontFamily": "Lato-Bold",
                  "fontSize": 14,
                  "marginBottom": 0,
                }
              }
              testID="title"
            >
              You haven't favorited any repos yet
            </Text>
            <Text
              style={
                {
                  "color": "#000000",
                  "fontFamily": "Lato-Regular",
                  "fontSize": 12,
                  "marginBottom": 14,
                  "marginTop": 0,
                }
              }
            >
              Why not try to find a repo you like?
            </Text>
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "backgroundColor": "#000000",
                  "borderRadius": 16,
                  "opacity": 1,
                  "paddingHorizontal": 30,
                  "paddingVertical": 16,
                }
              }
              testID="button"
            >
              <Text
                style={
                  {
                    "color": "#ffffff",
                    "fontFamily": "Lato-Bold",
                    "fontSize": 12,
                  }
                }
              >
                Start Searching
              </Text>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;
